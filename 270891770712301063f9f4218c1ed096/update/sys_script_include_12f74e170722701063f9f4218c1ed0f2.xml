<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_651162_deliver_0.DeliveryExpressUtils</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>Utility methods for Delivery Express app</description>
        <name>DeliveryExpressUtils</name>
        <script><![CDATA[var DeliveryExpressUtils = Class.create();
DeliveryExpressUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    getItemPrice: function() {
        var item_id = this.getParameter('sysparm_item_id');
        var ga = new GlideRecord('x_651162_deliver_0_item_sizes');
        ga.addQuery('sys_id', item_id);
        ga.query();
        gs.info(ga.getRowCount());
        gs.info('item sys id received : ' + item_id);
        while (ga.next()) {
            gs.info(item_id + ' : ' + ga.getValue('price'));
        }
        return ga.getValue('price');
    },
    newBookingData: function() {
        var booking_id = this.getParameter('sysparm_booking_id').toString();
        var item_size = this.getParameter('sysparm_item_size').toString();

        return createNewBooking(booking_id, item_size);
    },
    createNewBooking: function(booking_id, item_size) {
        var booking_table = new GlideRecord('x_651162_deliver_0_booking');
        booking_table.addQuery('booking_id', booking_id);
        booking_table.setLimit(1);
        booking_table.query();
        gs.info('booking record found : ' + booking_table.getRowCount());
        gs.info('received i/p : b = ' + booking_id + ', i = ' + item_size);

        while (booking_table.next()) {
            //create new records with default values set for fields
            var item_details_table = new GlideRecord('x_651162_deliver_0_item_details');
            item_details_table.newRecord();
            var state_details_table = new GlideRecord('x_651162_deliver_0_state_details');
            state_details_table.newRecord();

            gs.info('setting booking_id in item_details table : ' + booking_table.getValue('sys_id'));
            item_details_table.setValue('booking_id', booking_table.getValue('sys_id'));
            gs.info('setting size in item_size table : ' + item_size);
            item_details_table.setValue('size', item_size);
            gs.info('setting booking_id in state_details table : ' + booking_table.getValue('sys_id'));
            state_details_table.setValue('booking_id', booking_table.getValue('sys_id'));

            item_details_table.insert();
            state_details_table.insert();

            gs.info('setting item_id in item_details table : ' + item_details_table.getValue('sys_id'));
            booking_table.setValue('item_id', item_details_table.getValue('sys_id'));
            booking_table.setValue('current_state', state_details_table.getValue('sys_id'));
            booking_table.update();
        }
        return 'Success';
    },
    getCurrentState: function() {
        var booking_id = this.getParameter('sysparm_booking_id').toString();

        var booking_table = new GlideRecord('x_651162_deliver_0_booking');
        booking_table.addQuery('booking_id', booking_id);
        booking_table.setLimit(1);
        booking_table.query();
        gs.info('received i/p : b = ' + booking_id);
        gs.info('booking record found : ' + booking_table.getRowCount());

        while (booking_table.next()) {
            var state_details_table = new GlideRecord('x_651162_deliver_0_state_details');
            state_details_table.addQuery('sys_id', booking_table.current_state);
            state_details_table.setLimit(1);
            state_details_table.query();

            while (state_details_table.next()) {
                obj = {};
                ary = [];
                obj.sys_id = state_details_table.sys_id.toString();
                obj.state_name = state_details_table.state_name.state_name.toString();
                ary.push(obj);
                var parser = new global.JSON();
                var c_state = parser.encode(ary);
                return c_state;
            }
        }
        return null;
    },
    getBooking: function(b_id) {
        gs.info('b_id inside getBooking() : ' + b_id);
    },
    type: 'DeliveryExpressUtils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-09-17 18:25:26</sys_created_on>
        <sys_id>12f74e170722701063f9f4218c1ed0f2</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>DeliveryExpressUtils</sys_name>
        <sys_package display_value="DeliveryExpress" source="x_651162_deliver_0">270891770712301063f9f4218c1ed096</sys_package>
        <sys_policy/>
        <sys_scope display_value="DeliveryExpress">270891770712301063f9f4218c1ed096</sys_scope>
        <sys_update_name>sys_script_include_12f74e170722701063f9f4218c1ed0f2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-20 10:41:06</sys_updated_on>
    </sys_script_include>
</record_update>
